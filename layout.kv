#:kivy 2.1

MDScreen:
	MDBottomNavigation: 
		MDBottomNavigationItem: #informacje o interfejsach
			name: 'Interface information' 
			text: 'Info' 
			icon: 'ethernet' 
			spacing: dp(10)
			MDBoxLayout:
				orientation: "vertical"
				spacing: dp(10)
				MDRaisedButton:
					id: select_if_button
					text: app.translate("InterfaceInformation","ChooseInterfaceButton")
					pos_hint: {"center_x": .5, "center_y": .5}
					on_release: app.menu_if_names.open()
				MDRaisedButton:
					id: refresh_interval_button
					text: app.translate("InterfaceInformation","RefreshIntervalButton")
					pos_hint: {"center_x": .5, "center_y": .5}
					on_release: app.menu_interval.open()
                MDLabel:
					id: selected_if_label 
					text: app.translate("InterfaceInformation","SelectedInterfaceLabel")
                    size_hint_y: None
                    halign: "center"
				MDBoxLayout:
					orientation: "horizontal"
					padding: "10dp"
					MDBoxLayout:
						orientation: "vertical"
						MDLabel:
							text: app.translate("InterfaceInformation", "IPLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "MACLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "DNSLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "GatewayLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "DHCPLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "SubnetMaskLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "PacketsSentLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "PacketReceivedLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "LostOutgoingPacketsLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "LostIncomingPacketsLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "CurrentUploadSpeedLabel")
						MDLabel:
							text: app.translate("InterfaceInformation", "CurrentDownloadSpeedLabel")
					MDBoxLayout:
						orientation: "vertical"
						MDLabel:
                        	id:int_IP
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
                        	id:int_MAC
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_DNS
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_GW
							text: app.translate("InterfaceInformation", "noData")
                        MDLabel:
                            id:int_DHCP
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
                            id:int_sub_mask
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_SNT
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_RCV
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_LST_out
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_LST_in
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_speed_out
							text: app.translate("InterfaceInformation", "noData")
						MDLabel:
							id:int_speed_in
							text: app.translate("InterfaceInformation", "noData")

		 
		MDBottomNavigationItem: #skaner portów
			name: 'screen 2' 
			text: 'Port Scanner' 
			icon: 'tab-search'
			spacing: dp(10)
			BoxLayout:
        		orientation: 'vertical'
				spacing: dp(10)
				MDTextField:
					id: port_ip_address_input
					on_text: app.check_ip_format(self.text,'port_ip_address_input')
					hint_text: app.translate("PortScanner","IPAddressInputHint")
					helper_text: app.translate("PortScanner","exampleTextIp")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDTextField:
					id: port_start_input
					on_text: app.check_ports_input(self.text)
					input_filter: 'int'
					hint_text: app.translate("PortScanner","PortStartInputHint")
					helper_text: app.translate("PortScanner","exampleTextPortStart")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDTextField:
					id: port_stop_input
					on_text: app.check_ports_input(self.text)
					input_filter: 'int'
					hint_text: app.translate("PortScanner","PortStopInputHint")
					helper_text: app.translate("PortScanner","exampleTextPortStop")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDRaisedButton:
					id:scan_port_button
					text: app.translate("PortScanner","ScanPortsButton")
					pos_hint: {'center_x': 0.5}
					on_release: app.port_scan(port_ip_address_input.text,port_start_input.text,port_stop_input.text)
					disabled: True
				MDRaisedButton:
					id: select_port_filter_button
					text: app.translate("StringsInCode","ShowOpenPorts")
					pos_hint: {"center_x": .5, "center_y": .5}
					on_release: app.port_view_menu.open()

				ScrollView:
					BoxLayout:
						id: result_layout
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height

			
		MDBottomNavigationItem: #DNS lookup
			name: 'screen 3' 
			text: 'WHOIS dns' 
			icon: 'search-web'
			spacing: dp(10) 
			BoxLayout:
				orientation: "vertical"
				spacing: dp(10)
				MDTextField:
					id: domain_address_input
					on_text: app.is_valid_domain_name(self.text)
					hint_text: app.translate("DNSLookup","DomainAddressInputHint")
					helper_text: app.translate("DNSLookup","DnsHelperText")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
				MDRaisedButton:
					id:lookup_button
					text: app.translate("DNSLookup","LookupButton")
					pos_hint: {'center_x': 0.5}
					on_release: app.domain_info(domain_address_input.text)
					disabled: True
				ScrollView:
					BoxLayout:
						id: dns_result_layout
						orientation: 'vertical'
						spacing: dp(30)
						size_hint_y: None
						height: self.minimum_height


		MDBottomNavigationItem: #Urządzenia w sieci
			name: 'screen 5' 
			text: app.translate("LANDevices","DevicesInLAN")
			icon: 'help-network'
			spacing: dp(30) 
			padding: dp(30)
			BoxLayout:
				orientation: 'vertical'
				spacing: dp(10)
				padding: dp(30)
				MDTextField:
					id: network_address_input
					on_text: app.check_network_format(self.text)
					hint_text: app.translate("LANDevices","NetworkAddressInputHint")
					helper_text: app.translate("LANDevices","NetworkAdressHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
				MDRaisedButton:
					id:scan_network_button
					text: app.translate("LANDevices","ScanNetworkButton")
					pos_hint: {'center_x': 0.5}
					on_release: app.scan_network(network_address_input.text)
					disabled: True
				ScrollView:
					BoxLayout:
						id: result_layout_scan
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height
						spacing: dp(30)
						padding: dp(30)
						MDList:
							id: device_list
		MDBottomNavigationItem: #pingowanie
			name: 'screen 6' 
			text: 'Ping' 
			icon: 'web-clock'
			spacing: dp(10) 
			BoxLayout:
        		orientation: 'vertical'
				spacing: dp(10)
				padding: dp(10)
				MDTextField:
					id: ping_ip_address_input
					on_text: app.is_valid_ip_or_domain(self.text)
					hint_text: app.translate("Ping","PingIPAddressInputHint")
					helper_text: app.translate("Ping","PingIPAddressInputHint")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDTextField:
					id: ping_count_input
					input_filter: 'int'
					text: "5"
					hint_text: app.translate("Ping","PingCountInputHint")
					helper_text: app.translate("Ping","PingCountInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDRaisedButton:
					id:ping_button
					text: "Ping"
					pos_hint: {'center_x': 0.5}
					on_release: app.start_ping_thread(ping_ip_address_input.text,ping_count_input.text)
					disabled: True
				ScrollView:
					BoxLayout:
						id: ping_result_layout
						orientation: 'vertical'
						spacing: dp(30)
						padding: dp(30)
						size_hint_y: None
						height: self.minimum_height

		MDBottomNavigationItem: #traceroute
			name: 'screen 7' 
			text: 'Traceroute' 
			icon: 'routes' 
			spacing: dp(10)
			BoxLayout:
        		orientation: 'vertical'
				spacing: dp(10)
				padding: dp(10)
				MDTextField:
					id: traceroute_address_input
					on_text: app.check_domain_format(self.text)
					hint_text: app.translate("Traceroute","TracerouteAddressInputHint")
					helper_text: app.translate("Traceroute","TracerouteAddressInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDRaisedButton:
					id:traceroute_button
					text: "Traceroute"
					on_release: app.start_traceroute_thread(traceroute_address_input.text)
					disabled: True
					pos_hint: {'center_x': 0.5}
				ScrollView:
					BoxLayout:
						id: result_layout_traceroute
						spacing: dp(30)
						padding: dp(30)
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height
		MDBottomNavigationItem: #public ip
			name: 'screen 8' 
			text: 'Public IP' 
			icon: 'test-tube'
			spacing: dp(10) 
			BoxLayout:
        		orientation: 'vertical'
				spacing: dp(10)
				padding: dp(10)
				MDLabel:
					id:public_ip_label 
					text: app.translate("PublicIP","publicIPText")
					halign: 'center'
				MDRaisedButton:
					id:public_ip_button
					text: app.translate("PublicIP","CheckIPButton")
					on_release: app.get_public_ip()
					pos_hint: {'center_x': 0.5}
				BoxLayout:
					orientation: 'vertical'
					size_hint_y: None
					height: self.minimum_height
					spacing: dp(30)
					padding: dp(30)
		MDBottomNavigationItem: #syn flood
			name: 'screen 9' 
			text: 'SYN Attack' 
			icon: 'close-network'
			spacing: dp(10)  
			BoxLayout:
				orientation:'vertical'
				spacing: dp(10)
				padding: dp(10)
				MDTextField:
					id: flood_ip_address_input
					on_text: app.check_ip_format(self.text,'flood_ip_address_input')
					hint_text: app.translate("SYNAttack","FloodIPAddressInputHint")
					helper_text: app.translate("SYNAttack","FloodIPAddressInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDTextField:
					id: flood_port_input
					input_filter: 'int'
					hint_text: app.translate("SYNAttack","FloodPortInputHint")
					helper_text: app.translate("SYNAttack","FloodPortInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDRaisedButton:
					id:flood_button
					text: app.translate("SYNAttack","StartAttackButton")
					on_release: app.toggle_attack()
					pos_hint: {'center_x': 0.5}
				ScrollView:
					BoxLayout:
						id: result_layout_flood
						spacing: dp(30)
						padding: dp(30)
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height
						MDLabel:
							id:packet_count_label
		MDBottomNavigationItem: #Ping of death
			name: 'screen 10' 
			text: 'PoD Attack' 
			icon: 'close-network'
			spacing: dp(10)  
			BoxLayout:
				orientation:'vertical'
				spacing: dp(10)
				padding: dp(10)
				MDTextField:
					id: pod_ip_address_input
					on_text: app.check_ip_format(self.text,'pod_ip_address_input')
					hint_text: app.translate("PingOfDeathAttack","PODIPAddressInputHint")
					helper_text: app.translate("PingOfDeathAttack","PODIPAddressInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDTextField:
					id: pod_count_input
					input_filter: 'int'
					hint_text: app.translate("PingOfDeathAttack","PODCountInputHint")
					helper_text: app.translate("PingOfDeathAttack","PODCountInputHelper")
					helper_text_mode: "on_focus"
					pos_hint: {'center_x': 0.5}
					size_hint_x: None
					width: 300
					padding: [10, 10]
				MDRaisedButton:
					id:pod_button
					text: app.translate("PingOfDeathAttack","StartAttackButton")
					on_release: app.toggle_ping_of_death_attack()
					pos_hint: {'center_x': 0.5}
				ScrollView:
					BoxLayout:
						id: result_layout_pod
						spacing: dp(30)
						padding: dp(30)
						orientation: 'vertical'
						size_hint_y: None
						height: self.minimum_height
						MDLabel:
							id:packet_pod_count_label
		MDBottomNavigationItem: #ustawienia
			name: 'screen 11' 
			text: app.translate("Settings","SettingsName") 
			icon: 'wrench-cog-outline'
			spacing: dp(10) 
			MDCard:
				orientation: "vertical"
				padding: 0, 0, 0 , "36dp"
				size_hint: .5, .5
				pos_hint: {"center_x": .5, "center_y": .5}
				elevation: 2
				shadow_offset: 0, -2

				MDLabel:
					text: app.translate("Settings","ThemeStyle").format(app.theme_cls.theme_style)
					halign: "center"
					valign: "center"
					bold: True
					font_style: "H5"

				MDRaisedButton:
					text: app.translate("Settings","SetThemeButton")
					on_release: app.switch_theme_style()
					pos_hint: {"center_x": .5}